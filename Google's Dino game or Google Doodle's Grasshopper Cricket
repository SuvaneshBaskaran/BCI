import serial
import numpy as np
from scipy import signal
import pandas as pd
import pickle
import pyautogui
import time
from collections import deque

import warnings
warnings.filterwarnings("ignore", category=UserWarning)

SAMPLING_RATE = 500
WINDOW_SIZE = 250         # 0.5s window
STEP_SIZE = 125       # 50% overlap
THRESHOLD = 25

import serial
import time

# Configuration constants
COM_PORT = 'COM6'
BAUD_RATE = 115200
TIMEOUT = 1              # Serial read timeout in seconds
THRESHOLD = 8#EMG activation threshold (0-100)
#TOLERANCE =  5          # Acceptable difference between emg1 and emg2 for UP gesture
GESTURE_DELAY = 0.5      # Minimum time between gesture events in seconds


def main():
    ser = serial.Serial(COM_PORT, BAUD_RATE, timeout=TIMEOUT)
    last_gesture_time = 0

    while True:
        try:
            raw_line = ser.readline().decode('utf-8').strip()
            if not raw_line:
                continue

            try:
                emg1_str, emg2_str = raw_line.split(',')
                emg1 = float(emg1_str)
                emg2 = float(emg2_str)
            except ValueError:
                # Skip malformed lines
                continue

            # Determine which channels are active
            # emg1_active = emg1 > THRESHOLD
            # emg2_active = emg2 > THRESHOLD

            # Default to no action
            action = None

            if emg1 > THRESHOLD and emg2 > THRESHOLD:
                action = 'up'
            elif emg1 > THRESHOLD and emg2 < THRESHOLD:
                action = 'right'
            elif emg2 > THRESHOLD and emg1 < THRESHOLD:
                action = 'left'
            
            # # UP: both active and similar amplitude
            # if emg1_active and emg2_active and abs(emg1 - emg2) <= TOLERANCE:
            #     action = 'up'
            # # RIGHT: only EMG1 above threshold
            # elif emg1_active and not emg2_active:
            #     action = 'right'
            # # LEFT: only EMG2 above threshold
            # elif emg2_active and not emg1_active:
            #     action = 'left'
            # # REST or ambiguous: skip
            # else:
            #     continue
            # Gesture delay: ensure events are spaced out
            # print(emg1, emg2)
            now = time.time()
            if now - last_gesture_time < GESTURE_DELAY:
                continue
            if action and action == "right":
                pyautogui.press("right" ,presses=0.50)
                print("right")
            elif action and action == "left":
                pyautogui.press("left", presses=0.50)
                print("left")
            
            elif action and action == "up":
                pyautogui.press("up",presses=0.50)

            last_gesture_time = now

        except Exception as e:
            print(f"Error: {e}")
            continue

if __name__ == '__main__':
    main()                                        
